############################################################################
## THIS CONFIG IS WORKED WITH
##  
##  gunicorn -b 0.0.0.0:5000 -k eventlet -w 1 -t 60 volume3d.wsgi
##
##    -t 60: timing 60 seconds
############################################################################
user       www www;  ## Default: nobody
worker_processes  5;  ## Default: 1
error_log  logs/error.log;
pid        logs/nginx.pid;
worker_rlimit_nofile 8192;

events {
  worker_connections  4096;  ## Default: 1024
}


http {
  include    mime.types;
  include    proxy.conf;
  #include   /etc/nginx/fastcgi.conf;
  index    index.html index.htm index.php;

  default_type application/octet-stream;
  log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log   logs/access.log  main;
  sendfile     on;
  tcp_nopush   on;
  server_names_hash_bucket_size 128; # this seems to be required for some vhosts
    
  server {
    # redirect http requests to https
    listen 80;
    server_name 192.168.1.12;

    return 301 https://$host$request_uri;
    }


  server { # simple reverse-proxy
    #listen       80;
    listen       443 ssl;
    server_name  192.168.1.12;
    access_log   logs/domain2.access.log  main;
    
    ssl_certificate      server.crt;
    ssl_certificate_key  server.key;

    ssl_session_cache    shared:SSL:1m;
    ssl_session_timeout  5m;

    ssl_ciphers  HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers  on;
    

    # serve static files
    location ~ ^/(images|javascript|js|css|flash|media|static)/  {
      root    I:/git/boilerplate1/volume3d;
      expires 30d;
    }

    # pass requests for dynamic content to rails/turbogears/zope, et al
    #location / {
    #  proxy_pass      http://127.0.0.1:5000;
    #}
    
    location / {
    try_files $uri @proxy_to_app;
    }
 
    location @proxy_to_app {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
        proxy_buffering off;
        proxy_pass http://io_nodes;
    }
    
    location /socket.io {
        proxy_pass http://io_nodes/socket.io;
        proxy_redirect off;
        proxy_buffering off;
     
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
      }
    
    # let's encrypt host validation
    location ~ /.well-known {
        allow all;
    }
    
  }
    upstream io_nodes {
      ip_hash;
      server 127.0.0.1:5000;
      #server 127.0.0.1:5002;
      #server 127.0.0.1:5003;
      #server 127.0.0.1:5004;
    }

  upstream big_server_com {
    server 127.0.0.3:8000 weight=5;
    server 127.0.0.3:8001 weight=5;
    server 192.168.0.1:8000;
    server 192.168.0.1:8001;
  }

  server { # simple load balancing
    listen          80;
    server_name     big.server.com;
    access_log      logs/big.server.access.log main;

    location / {
      proxy_pass      http://big_server_com;
    }
  }
}